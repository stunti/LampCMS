<?php
/**
 *
 * License, TERMS and CONDITIONS
 *
 * This software is lisensed under the GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * Please read the license here : http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * ATTRIBUTION REQUIRED
 * 4. All web pages generated by the use of this software, or at least
 * 	  the page that lists the recent questions (usually home page) must include
 *    a link to the http://www.lampcms.com and text of the link must indicate that
 *    the website\'s Questions/Answers functionality is powered by lampcms.com
 *    An example of acceptable link would be "Powered by <a href="http://www.lampcms.com">LampCMS</a>"
 *    The location of the link is not important, it can be in the footer of the page
 *    but it must not be hidden by style attibutes
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE FREEBSD PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * This product includes GeoLite data created by MaxMind,
 *  available from http://www.maxmind.com/
 *
 *
 * @author     Dmitri Snytkine <cms@lampcms.com>
 * @copyright  2005-2011 (or current year) ExamNotes.net inc.
 * @license    http://www.gnu.org/licenses/lgpl-3.0.txt GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * @link       http://www.lampcms.com   Lampcms.com project
 * @version    Release: @package_version@
 *
 *
 */


namespace Lampcms;

/**
 * Class for working with Bit.ly API
 * to get Short URL
 * Later it may even support more API functions
 * like expand short url back to original
 * or to view some click stats
 * but primaraly we just need to make short URL
 *
 * @author Dmitri Snytkine
 *
 */
class Bitly
{
	
	/**
	 * Array of Bit.ly api config
	 * - array of !config.ini BITLY section
	 *
	 * @var array
	 */
	protected $config;
	
	
	/**
	 * Set timeout to 4.5 seconds
	 * and a "normal" useragent
	 * These params are used by file_get_contents to
	 * access Bit.ly api
	 * 
	 * @var array
	 */
	protected $aStreamOptions = array(
	'http' => array('timeout' => 4.5,
					'user_agent' => 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1.4) Gecko/20091016 Firefox/3.5.4 GTB5')
	);

	
	/**
	 * Constructor
	 * 
	 * @param mixed $config usually this is array
	 * of BITLY section from !config.ini
	 */
	public function __construct($config){
		$this->config = $config;
	}


	/**
	 * Get the Short URL using bit.ly api
	 * 
	 * @todo pass timeout as stream option to be
	 * no more than 5 seconds. This is not really necessary
	 *
	 * @return mixed string | false if no support for bit.ly api
	 * or if call to bit.ly api fails
	 *
	 */
	public function getShortUrl($url){
		d('input url: '.$url);
		$tplUrl = 'http://api.bitly.com/v3/shorten?login=%s&apiKey=%s&longUrl=%s&format=json';
		if(!empty($this->config) && !empty($this->config['user']) && !empty($this->config['api_key'])){
			$context = \stream_context_create($this->aStreamOptions);
			$res = \file_get_contents(sprintf($tplUrl, $this->config['user'], $this->config['api_key'], urlencode($url) ), false, $context);
			if(empty($res)){
				d('did not get data back from bit.ly');
				return false;
			}

			if(false === $a = json_decode($res, true)){
				d('unable to json_decode data returned by bit.ly '.$res);
				return false;
			}

			d('bit.ly decoded json data: '.print_r($a, 1));
			
			if(!empty($a)
			&& !empty($a['status_code'])
			&& ('200' == $a['status_code'])
			&& !empty($a['data'])
			&& !empty($a['data']['url']) ){
				d('got short url from bit.ly: '.$a['data']['url']);
				return $a['data']['url'];
			}
		}

		d('no short url from bitly');
		return false;
	}
}
