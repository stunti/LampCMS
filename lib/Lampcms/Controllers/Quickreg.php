<?php
/**
 *
 * License, TERMS and CONDITIONS
 *
 * This software is lisensed under the GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * Please read the license here : http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * ATTRIBUTION REQUIRED
 * 4. All web pages generated by the use of this software, or at least
 * 	  the page that lists the recent questions (usually home page) must include
 *    a link to the http://www.lampcms.com and text of the link must indicate that
 *    the website's Questions/Answers functionality is powered by lampcms.com
 *    An example of acceptable link would be "Powered by <a href="http://www.lampcms.com">LampCMS</a>"
 *    The location of the link is not important, it can be in the footer of the page
 *    but it must not be hidden by style attibutes
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE FREEBSD PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * This product includes GeoLite data created by MaxMind,
 *  available from http://www.maxmind.com/
 *
 *
 * @author     Dmitri Snytkine <cms@lampcms.com>
 * @copyright  2005-2011 (or current year) ExamNotes.net inc.
 * @license    http://www.gnu.org/licenses/lgpl-3.0.txt GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * @link       http://www.lampcms.com   Lampcms.com project
 * @version    Release: @package_version@
 *
 *
 */

namespace Lampcms\Controllers;

use \Lampcms\Responder;
use \Lampcms\Validate;
use \Lampcms\Captcha;
use \Lampcms\String;

/**
 * Class for processing registration
 * form which is ONLY sent
 * via AJAX and is presented in modal DIALOG
 * window
 *
 * @author Dmitri Snytkine
 *
 */
class Quickreg extends Join
{

	protected $aAllowedVars = array(
    								'tzo',
                                    'email',
                                    'username',                                  
    								 'public_key',
    							     'hncaptcha',
    								 'terms',
    								 'submit',
                                     'private_key');


	protected $aRequired = array('username', 'email');

	/**
	 * Registered members are not allowed to use this
	 * method
	 *
	 * @var string
	 */
	protected $permission = 'register';

	public function main(){
		/**
		 * $this->username and $this->pwd
		 * are used in createNewUser() in Register
		 */
		$this->username = $this->oRequest['username'];
		$this->pwd = String::makePasswd();

		$this->validateCaptcha()
		->checkUsername()
		->validateEmail()
		->createNewUser()
		->createEmailRecord()
		->sendActivationEmail()
		->setReturn();
	}


	/**
	 *
	 */
	protected function validateCaptcha(){
		if(!empty($_SESSION['reg_captcha'])){
			return $this;
		}

		$oCaptcha = Captcha::factory($this->oRegistry);
		$res = $oCaptcha->validate_submit();
		/**
		 * If validation good then
		 * all is OK
		 */
		if(1 === $res){
			$_SESSION['reg_captcha'] = true;

			return $this;
		}

		/**
		 * If 3 then reached the limit of attampts
		 */
		if(3 === $res){
			throw new \Lampcms\CaptchaLimitException('You have reached the limit of image verification attempts');
		}

		$aRet = array(
		'exception' => 'Incorrect image verification text<br/>Please try again',
		'fields' => array('private_key'),
		'captcha' => $oCaptcha->getCaptchaArray());

		Responder::sendJSON($aRet);

	}

}
