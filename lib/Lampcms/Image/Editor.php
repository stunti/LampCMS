<?php
/**
 *
 * License, TERMS and CONDITIONS
 *
 * This software is lisensed under the GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * Please read the license here : http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * ATTRIBUTION REQUIRED
 * 4. All web pages generated by the use of this software, or at least
 * 	  the page that lists the recent questions (usually home page) must include
 *    a link to the http://www.lampcms.com and text of the link must indicate that
 *    the website\'s Questions/Answers functionality is powered by lampcms.com
 *    An example of acceptable link would be "Powered by <a href="http://www.lampcms.com">LampCMS</a>"
 *    The location of the link is not important, it can be in the footer of the page
 *    but it must not be hidden by style attibutes
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE FREEBSD PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * This product includes GeoLite data created by MaxMind,
 *  available from http://www.maxmind.com/
 *
 *
 * @author     Dmitri Snytkine <cms@lampcms.com>
 * @copyright  2005-2011 (or current year) ExamNotes.net inc.
 * @license    http://www.gnu.org/licenses/lgpl-3.0.txt GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * @link       http://www.lampcms.com   Lampcms.com project
 * @version    Release: @package_version@
 *
 *
 */


namespace Lampcms\Image;


/**
 * Abstract class for image parsing
 *
 * @author Dmitri Snytkine
 *
 */
abstract class Editor extends \Lampcms\LampcmsObject
{


	/**
	 * Type of original image
	 * this will be one of these:
	 * 'jpeg', 'gif' or 'png'
	 *
	 * @var string
	 */
	protected $origType;

	/**
	 * result of getimagesize()
	 * call on original image
	 * @var unknown_type
	 */
	protected $aOrigSize;


	/**
	 * Compression level
	 * for saving jpeg images
	 * default is 100, meaning no compression
	 * (highest quality)
	 *
	 * @var int
	 */
	protected $intCompression = 100;

	/**
	 * A path based on ID
	 *
	 * @var string
	 */
	protected $sHexPath;


	/**
	 * resizing factor
	 *
	 * @var int
	 */
	protected $factor = 1;

	/**
	 * File extension of the thumb and work image
	 * This is determined during the parsing
	 * of the actual file.
	 * This is not always the same as the extension
	 * of the original file because image parser may automatically
	 * change image extension, for example if image is in .bmp
	 * format, it may be converted to .gif
	 *
	 * @var string
	 */
	protected $ext;

	/**
	 * Can hold array of image resources
	 */
	protected $aResources = array();



	/**
	 * Instantiate sub-class of this class
	 * based on installed php modules (try Imagick, then GD)
	 * Sets the hdlOrig if sImgPath is provided by calling
	 * the loadImage() method
	 *
	 * @param object $oGlobal object
	 *
	 * @param string $sImgPath a path to image
	 * which will be used to load original image
	 *
	 * @param bool $bUseGDis set to true,
	 * then use GD functions even if magickwand or imagick
	 * extensions are available
	 *
	 * @param object $oStatus object of type clsStatus
	 * This is used to keep sending out status messages
	 * to browser while
	 * image is being processed
	 *
	 * @return object $this
	 *
	 * @throws LampcmsImageException if sub-class could
	 * not be instantiated for any reason
	 */
	public static final function factory(\Lampcms\Registry $oRegistry){

		/**
		 * @todo later may add
		 * support for imagick
		 */
		if(extension_loaded('gd')){
			return new EditorGD($oRegistry);
		}

		throw new \Lampcms\Exception('Unable to parse images because neither GD nor Imagick extensions are available');

	}

	
	/**
	 * Getter for $this->origType
	 * @return string
	 */
	public function getOrigType(){
		return $this->origType;
	}

	
	/**
	 * Must create $this->hdlOrig resource
	 * from the input image path
	 * or throw exception if could not do this
	 */
	abstract public function loadImage($sPath);

	abstract public function save($sPath, $hdlImg = null, $intCompression = null);

	abstract public function scale($intWidth, $intHeight);

	abstract public function makeSquare($intWidth);

	//abstract public function addAvatar(\Lampcms\User $User, $pathToImage);

	//abstract protected function detectBlank();

	abstract protected function addBorder($intBorderWidth = 1);

	/**
	 * Must release orig
	 * and work resources
	 */
	abstract public function __destruct();

}
